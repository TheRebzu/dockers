version: '3.8'

services:
  # Service Base de données PostgreSQL
  database:
    image: postgres:15-alpine
    container_name: fullstack_database
    restart: unless-stopped
    environment:
      POSTGRES_DB: fullstack_app
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - fullstack_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Service Backend (API)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: fullstack_backend
    restart: unless-stopped
    depends_on:
      - database
    environment:
      - PORT=3001
      - DB_HOST=database
      - DB_NAME=fullstack_app
      - DB_USER=postgres
      - DB_PASSWORD=password
      - DB_PORT=5432
    ports:
      - "3001:3001"
    networks:
      - fullstack_network

  # Service Frontend (React)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: fullstack_frontend
    restart: unless-stopped
    depends_on:
      - backend
    environment:
      - REACT_APP_API_URL=http://localhost:3001
    ports:
      - "3000:3000"
    networks:
      - fullstack_network

# Configuration des volumes pour la persistance des données
volumes:
  postgres_data:
    driver: local

# Configuration du réseau personnalisé pour la communication sécurisée
networks:
  fullstack_network:
    driver: bridge
